// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateUser should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateUser />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <fieldset>
          <input
            className="create-user-input"
            name="name"
            placeholder="Name"
            required={true}
            type="text"
            value=""
          />
          <input
            className="create-user-input"
            name="email"
            placeholder="Email"
            required={true}
            type="text"
            value=""
          />
          <input
            className="create-user-input"
            name="password"
            placeholder="Password"
            required={true}
            type="password"
            value=""
          />
          <input
            className="create-user-input"
            name="confirmation"
            placeholder="Confirmation"
            required={true}
            type="password"
            value=""
          />
        </fieldset>,
        <button
          className="create-account-button"
        >
          Create Account
        </button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="create-user-input"
              name="name"
              placeholder="Name"
              required={true}
              type="text"
              value=""
            />,
            <input
              className="create-user-input"
              name="email"
              placeholder="Email"
              required={true}
              type="text"
              value=""
            />,
            <input
              className="create-user-input"
              name="password"
              placeholder="Password"
              required={true}
              type="password"
              value=""
            />,
            <input
              className="create-user-input"
              name="confirmation"
              placeholder="Confirmation"
              required={true}
              type="password"
              value=""
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "create-user-input",
              "name": "name",
              "placeholder": "Name",
              "required": true,
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "create-user-input",
              "name": "email",
              "placeholder": "Email",
              "required": true,
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "create-user-input",
              "name": "password",
              "placeholder": "Password",
              "required": true,
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "create-user-input",
              "name": "confirmation",
              "placeholder": "Confirmation",
              "required": true,
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "fieldset",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Create Account",
          "className": "create-account-button",
        },
        "ref": null,
        "rendered": "Create Account",
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <fieldset>
            <input
              className="create-user-input"
              name="name"
              placeholder="Name"
              required={true}
              type="text"
              value=""
            />
            <input
              className="create-user-input"
              name="email"
              placeholder="Email"
              required={true}
              type="text"
              value=""
            />
            <input
              className="create-user-input"
              name="password"
              placeholder="Password"
              required={true}
              type="password"
              value=""
            />
            <input
              className="create-user-input"
              name="confirmation"
              placeholder="Confirmation"
              required={true}
              type="password"
              value=""
            />
          </fieldset>,
          <button
            className="create-account-button"
          >
            Create Account
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                className="create-user-input"
                name="name"
                placeholder="Name"
                required={true}
                type="text"
                value=""
              />,
              <input
                className="create-user-input"
                name="email"
                placeholder="Email"
                required={true}
                type="text"
                value=""
              />,
              <input
                className="create-user-input"
                name="password"
                placeholder="Password"
                required={true}
                type="password"
                value=""
              />,
              <input
                className="create-user-input"
                name="confirmation"
                placeholder="Confirmation"
                required={true}
                type="password"
                value=""
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "create-user-input",
                "name": "name",
                "placeholder": "Name",
                "required": true,
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "create-user-input",
                "name": "email",
                "placeholder": "Email",
                "required": true,
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "create-user-input",
                "name": "password",
                "placeholder": "Password",
                "required": true,
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "create-user-input",
                "name": "confirmation",
                "placeholder": "Confirmation",
                "required": true,
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "fieldset",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create Account",
            "className": "create-account-button",
          },
          "ref": null,
          "rendered": "Create Account",
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
